**3. Cloud Functions:**

3.1. **Create a directory for the function:**

```bash
mkdir bucket_experiment
```

```bash
cd bucket_experiment
```

3.2. **Create a `main.py` file:**

```python
from google.cloud import bigquery
from google.cloud import storage
import pandas as pd
import os

PROJECT_ID = os.environ['GCP_PROJECT'] # Automatically gets the project ID
DATASET_ID = 'experiment'
TABLE_ID = 'tabla_experiment'

def process_excel(event, context):
    # Get the information of the uploaded file
    file = event
    bucket_name = file['bucket']
    file_name = file['name']

    # Download the Excel file from Cloud Storage
    storage_client = storage.Client()
    bucket = storage_client.bucket(bucket_name)
    blob = bucket.blob(file_name)
    blob.download_to_filename('/tmp/archivo_1.xlsx') 

    # Read the Excel file with pandas
    df = pd.read_excel('/tmp/archivo_1.xlsx') 

    # Perform column validation (example: verify if there are 82 columns)
    if len(df.columns) != 82:
        raise ValueError(f"Incorrect number of columns: {len(df.columns)}")

    # Set up the BigQuery client
    bq_client = bigquery.Client(project=PROJECT_ID)

    # Define the schema of the destination table (optional)
    # You can omit this part if the table already exists with the correct schema
    table_ref = bq_client.dataset(DATASET_ID).table(TABLE_ID)
    job_config = bigquery.LoadJobConfig()
    # Define the schema here (see BigQuery documentation)

    # Load the data into BigQuery
    job = bq_client.load_table_from_dataframe(
        df, table_ref, job_config=job_config
    )
    job.result()  # Wait for the load to complete

    print(f"File {file_name} processed and loaded into BigQuery.")
```

3.3. **Create a `requirements.txt` file:**

```txt
google-cloud-bigquery
google-cloud-storage
pandas
openpyxl
```

3.4. **Deploy the function:**

```bash
gcloud functions deploy bucket_experiment \
  --runtime python39 \
  --trigger-resource gs://bucket_experiment \
  --trigger-event google.storage.object.finalize \
  --source . \
  --entry-point=process_excel
```

